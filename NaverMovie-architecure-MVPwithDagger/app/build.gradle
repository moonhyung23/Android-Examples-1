apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.tistory.black_jin0427.navermovie"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "MOVIE_CLIENT_ID",
                project.properties["MOVIE_CLIENT_ID"] ?: "\"NOT_FOUND\""

        buildConfigField "String", "MOVIE_CLIENT_SECRET",
                project.properties["MOVIE_CLIENT_SECRET"] ?: "\"NOT_FOUND\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //library
    implementation "androidx.appcompat:appcompat:$library_version"
    implementation "com.google.android.material:material:$library_version"
    implementation "androidx.cardview:cardview:$library_version"
    implementation "androidx.recyclerview:recyclerview:$library_version"

    //viewModel and liveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    //constraint
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // dagger
    implementation "com.google.dagger:dagger:$dagger_vserion"
    implementation "com.google.dagger:dagger-android:$dagger_vserion"
    implementation "com.google.dagger:dagger-android-support:$dagger_vserion"

    kapt "com.google.dagger:dagger-android-processor:$dagger_vserion"
    kapt "com.google.dagger:dagger-compiler:$dagger_vserion"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    //okHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"

    //glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    //anko commons
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-support-v4-commons:$anko_version"

    //rx android
    implementation "io.reactivex.rxjava2:rxandroid:$rxandoird_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    //rx binding
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rxbinding_version"

    //junit
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'

    //test
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    //mockito
    testImplementation 'org.mockito:mockito-core:2.23.0'

    //error : Mockito cannot mock/spy because : - final class
    testImplementation 'org.mockito:mockito-inline:2.23.0'
}
